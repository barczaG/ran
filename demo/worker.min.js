function collect(n,e){Object.entries(n.reduce(function(n,e){var r=Math.floor(e);if(!n.hasOwnProperty(r)){n[r]=1}else{n[r]++}return n},{})).forEach(function(n){if(!e.hasOwnProperty(n[0])){e[n[0]]=n[1]}else{e[n[0]]+=n[1]}})}var diff=[];function send(n,e,r){diff.push(e.map(function(e,r){return Math.abs(e.y-n[r].y)}).reduce(function(n,e){return n+e},0)/e.reduce(function(n,e){return n+e.y},0));postMessage({p:[{name:"real",values:n},{name:"estimate",values:e}],m:r,d:[{name:"diff",values:diff.map(function(n,e){return{x:e,y:n}})}]})}self.addEventListener("message",function(n){"use strict";importScripts("../../ran.min.js");var e=new ran.dist.Weibull(10,2);var r=new ran.mc.Metropolis(function(n){return Math.log(e.pdf(n))},1,{x0:[Math.random()],min:0});console.log("burn in");r.burnIn(null,100);console.log("sampling");var a=1e4;var t=0;var u=0;var i={};var s=[];var c=[];var o=[];var f=[];var l=100;var m=function(){var n=r.sample(null,a);var v=r.stats();var p=r.acceptance();u+=n.length;t=Math.max(t,n.reduce(function(n,e){n=Math.max(n,e);return n},0));collect(n,i);s.push(v.mean[0]);c.push(v.std[0]);o.push(p);f=r.ac();send(new Array(Math.ceil(t+10)).fill(0).map(function(n,r){return{x:r-.5,y:u*e.pdf(r)}}),Object.entries(i).map(function(n){return{x:+n[0],y:n[1]}}),[{name:"correlation",values:s.map(function(n,e){return{x:e,y:n}})}]);if(l>0){setTimeout(m,100);l--}};m()});